<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAHdElNRQfnCxgDJjm7dXqOAAAErUlEQVR4Xu2aXYgVZRzGN1fQbAkx
        kcRSWA1ZP65KJQjtw26CFU0rEVKRpboIQiuzuiiqhdoiAm+sm6WL0rLIC6HoYyEUIrIoKokg62LNbsqK
        Sotq+z3z/pU9+77jmTnNnHmPzA8eGOb8P55h95z3a7pqampqampqatrB2NjYEvQwGkFfod9Muta9h9Bi
        Cz9/4KGuRR+irHyAVlp658JD9KBX9UQtsg/1WLnOAuPz0Gd6iv/Jp2iele0MMDwDfS33BfENmmnl4waj
        k9G7cp3CP+gQegRtNT2KDiN9lsbbqNvaxAsm70zshnkHLbFQDz5bit5TYAoDFhonGLwIfZ9Y9XkWTbLQ
        VIjpRs8pIcBxNM1C4wNzdyQ2fV5GF1hYUxSLXlFigHj/CzD3pvPYwEl0iYVkhpyZ6GcVmMBBC4kLjE1D
        pxOLjQxZSG7IfcaVaOAUutBC4gFTCxN7PtdYSG7IXelKeFxhIfGAqeucN4+Wx29yZ7kSHqssJB4wtcZ5
        85hiIblRrivh0W8h8YCpFc6bx1wLyQ25mk6HWG4h8YCpuc6bxy0WkhtyN7oSHnMsJB4wNQmdSOw18rqF
        5IbcA65EA5poNZ1QVQLGXkgsNvIvWmYhmSHnasudyB4LiQ/MrXYePbSayzwZIlaToGNKDHC9hcUJBt93
        Pj2+QL0WlgoxC9CXSggwYmHxgkmNBmnLWu3/PYYut/Cz6B56HP2OQvyNcn+VKgGjuxLL6ei7fRRp7SDp
        uhk7rXxngOEXne9CGLaynQOmtaTVTk/olzwryn0SxTnsZQHzN6PvUF6+RWutTGfDg2hOvwOl/bqPR6PF
        dtTyGiJqeDANc3chjQbDJl1rL3GBhdXUnA/wL62RoBetQrcjHX4OoeeR1g06NpN0rXtPoQeRYpWj3Myb
        qZWDWa0ItTP0BNJBRmhTMy/aVFUtzRJVO74hEVN96Gk0ispGPbRZ2mftqwMTlyGd4J7rSKss1HMvqmZz
        hMa3oV9Q1chDy7tOLUHD+1DeKa5Wc/r3PYJ0eKpzwv0mXeuePlOMYvMgL9vNXrnQSH/5Zg+vAxKt8rQW
        uAlpqTvZSjRFsZajXNV4C4UOXcYjT7daiXKgwaXoJ3VL4RO0DU23lMJQTautHmn8iGZZSvFQXCuzEPoe
        bkalD1HqgbagX1GIQQstFgprUhM6+tY4faWFtQ16XoVC84xRCykWCqed/d1vIW2H3g84Cx7Fnx1S9EZX
        26OyF5joralyiBsspDgo2u9qe1S2bqf3VGfBo/izQ4rqOxeisl0beq9zFjyK/02iqIahv5LyjfyJtA6Y
        b6Glo15I6wH1nojuXWyhxULhN5IW6XyMdqMBpP+Y2ajlV9uUazVUSzVVWz3OxWuWXjwUX4T+SNpkRzO0
        H9DnSFNdvRStqa9mimf2A3Ste/pMMYpVTt7ptg5VFpndcqDBBhT6KlSNPK03m+VCI7393cpWd1loC729
        r83QUEPQ3egjVBXqLQ9TzVY1YEBb3fcivRCpc768y9ksqKbOFV5C6tW2USc3mNM7g/rB1FdlE7oHDSIt
        pvYgbYDqPODMj6CudU+fKUaxylGuaqhWvK/I1tTU1HQmXV3/AQVkFwyLMBbxAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAAAAdwAA
        AG0AAAASAAAAAAAAAAAAAAAAAAAAKwAAAHoAAABoAAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAMQAAAHwAAABkAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOwAA
        AL0AAABWAAAAYAAAAMYAAAAYAAAAAAAAAEkAAAC2AAAAUwAAAGUAAADEAAAADwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAFYAAACuAAAAVAAAAGoAAADAAAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAC1AAAASwAAAMcAAADOAAAAUgAAAIYAAAAAAAAAvQAAAFMAAADEAAAAzAAAAGAAAABzAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAwgAAAF0AAADAAAAAyAAAAGoAAABkAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAVAAAAbwAAANoAAABpAAAAfQAAAKsAAABXAAAAygAAAHcAAADYAAAAeAAAAG8AAAC3AAAAYQAA
        AMAAAAB3AAAAdwAAAHcAAAB3AAAAgAAAAJUAAADXAAAAhwAAAGMAAADBAAAAaQAAAL4AAABuAAAAEwAA
        AAAAAAAAAAAAAAAAAL8AAABUAAAAzQAAAKUAAACCAAAAbQAAANIAAACeAAAARAAAANkAAACRAAAAhwAA
        AGYAAADfAAAAiwAAAEQAAABEAAAARAAAAEQAAABqAAAAqgAAAOIAAACBAAAAigAAAGEAAADmAAAAfAAA
        AF0AAAC6AAAAAAAAAAAAAAAAAAAAvAAAAAAAAAAOAAAA0QAAAPAAAADxAAAArgAAAAAAAAAAAAAAFgAA
        ANkAAADwAAAA8QAAAJ8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQAAACLAAAAHwAAAN4AAADwAAAA8AAA
        AJIAAAAAAAAAAAAAAMUAAAAAAAAAAAAAAAAAAAC6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAAIsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAC0AAADSAAAA+AAAAAAAAAAAAAAAAAAAANYAAABnAAAAhQAAAIkAAABmAAAAZgAA
        AGYAAABmAAAAZgAAAGYAAABmAAAAZgAAAGYAAACGAAAAZgAAAGoAAACCAAAAZgAAAGYAAACFAAAAnwAA
        AAAAAAAMAAAABAAAAAAAAAAAAAAARwAAAJEAAADzAAAAAAAAAAAAAAA5AAAAuwAAANgAAAC0AAAAugAA
        AMwAAAB0AAAAVQAAAFUAAABVAAAAVQAAAFUAAABVAAAAVgAAANoAAABwAAAAggAAALoAAABVAAAAVQAA
        AH0AAACcAAAADQAAALUAAABfAAAAAAAAAAAAAAAQAAAAggAAAOEAAAAAAAAACwAAAMcAAAAnAAAAAAAA
        AAAAAAARAAAAJQAAAKgAAACiAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjgAAAPIAAADrAAAAMAAA
        AAAAAAAAAAAANAAAAIsAAAAAAAAABQAAAF8AAAB3AAAAdwAAAHcAAAB3AAAA3QAAAAAAAAB8AAAAXwAA
        AAAAAAAAAAAAJwAAAKwAAAAAAAAAAAAAADUAAAC3AAAAmQAAABcAAAAAAAAAAAAAAAAAAAA5AAAAhgAA
        AL8AAAAAAAAAAAAAAAAAAAA0AAAAiwAAAAAAAACWAAAAcgAAAEQAAABEAAAARAAAAEQAAAD0AAAAFAAA
        AMQAAAADAAAAAAAAAAAAAACqAAAAMgAAAAAAAAAAAAAASwAAAAAAAABEAAAAwgAAAIgAAAAOAAAAAAAA
        ADkAAACGAAAAvwAAAAAAAAAAAAAAAAAAADQAAACLAAAAAAAAAL8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        APEAAACQAAAATAAAAAAAAAAAAAAANAAAAKQAAAAAAAAAAAAAACcAAACyAAAAAAAAAAAAAAABAAAAVQAA
        AMcAAAB3AAAAPgAAAIYAAAC/AAAAAAAAAAAAAAAAAAAANAAAAIsAAAAAAAAAvwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA9gAAAM8AAABlAAAABAAAAAAAAABzAAAAIgAAAAAAAAAAAAAAqwAAADIAAAAAAAAAAAAA
        AH0AAAAPAAAABgAAAG8AAADSAAAArwAAAL8AAAAAAAAAAAAAAAAAAAA0AAAAiwAAAAAAAAC/AAAAAAAA
        AAAAAAAAAAAAAAAAAIsAAADQAAAABwAAAHAAAADDAAAAUwAAAAEAAAAAAAAAAAAAADgAAACkAAAAAAAA
        AAAAAAAmAAAAsgAAAAAAAAAAAAAAAwAAABYAAACPAAAA6AAAAEAAAAAAAAAAAAAAADQAAACLAAAAAAAA
        AL8AAAAAAAAAAAAAAAYAAACSAAAA8gAAACIAAAAAAAAAAAAAAA4AAACDAAAAvQAAAEAAAAAAAAAANwAA
        ABwAAAAAAAAAAAAAAKoAAAAxAAAAAAAAAAAAAACYAAAALwAAAAAAAAAyAAAAvQAAAAAAAAAAAAAAJwAA
        ANwAAADMAAAA8AAAAPEAAADxAAAA8wAAAMYAAAAdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAiAAA
        ALQAAAAxAAAAAAAAAAAAAAAwAAAAogAAAAAAAAAAAAAAJQAAALEAAAAAAAAAAAAAAJkAAABAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAIAAAAKAAAACpAAAAIwAAAAoAAAAOAAAAAAAAAAAAAACoAAAAMQAAAAAAAAAmAAAArgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADUAAAC4AAAAmQAAABgAAAAAAAAAEwAAAJYAAAAAAAAAAAAA
        AKwAAAAvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEAAAAwgAAAIgAAAAOAAAAAAAA
        AAAAAAA2AAAAnwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAWwAA
        AMgAAABGAAAAAAAAALoAAAAeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAoAAAADoAAABMAAAAjQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACEAAACtAAAAAwAAAMQAAAATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAAMEAAAAZAAAAqgAAAJwAAAAFAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASQAAAMQAAAB5AAAAsQAAADEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAF4AAAB0AAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////Dh/h/gQPwP4ED8D4AAAAOAAAADoMHwG7//8+OAA
        AJjAAAAYjB8MgJmHHIAZoRy+MzAcvhMwHLwGZgywwmZMAfDMz//8DJ///wmf///DP///4T////h////w
        f///8D////g////8P/////////////////8=
</value>
  </data>
</root>